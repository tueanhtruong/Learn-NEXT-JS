import type { NextPage } from 'next';
import Head from 'next/head';
import { Button, Grid, Text, View } from '../components/commons';
import Image from 'next/image';
import { IMAGES } from '../app-config/images';
import { IRootState } from '../redux/rootReducer';
import { connect } from 'react-redux';
import { useRouter } from 'next/router';
import { PATHS } from '../app-config/paths';
import ProductBanner from '../components/LandingPage/ProductBanner';
import LandingNavbar from '../components/LandingPage/LandingNavbar';
import BestSellingProduct from '../components/LandingPage/BestSellingProduct';
import Footer from '../components/LandingPage/Footer';

const fadeImages: {
  urlKey: keyof typeof IMAGES;
  caption: string;
  description: string;
}[] = [
  {
    urlKey: 'banner4',
    caption: 'Duis sed',
    description: 'Nunc malesuada aliquam quam, eu auctor mi fringilla non.',
  },
];

const bestSelling: {
  image: keyof typeof IMAGES;
  caption: string;
  price: string;
}[] = [
  {
    caption: 'Suscipit Velit',
    price: '20.000',
    image: 'bestSelling1',
  },
  {
    caption: 'Vestibulum',
    price: '15.000',
    image: 'bestSelling2',
  },
  {
    caption: 'Convallis',
    price: '30.000',
    image: 'bestSelling3',
  },
];

const Home: NextPage<Props> = ({ isAuthenticated }) => {
  const router = useRouter();
  // const [currentSlide, setSlide] = useState<number>(0);
  // const bannerRef = useRef<SlideshowRef>();
  const handleBannerClick = () => {
    if (isAuthenticated) return router.push(PATHS.shopping);
    return router.push(PATHS.signIn);
  };
  // const handleChangeSlide = (_from: number, to: number) => setSlide(to);
  // const handleGoSlide = (to: number) => () => {
  //   if (to !== currentSlide) return bannerRef.current?.goTo(to);
  // };
  const fadeImage = fadeImages[0];
  return (
    <View className="p-landing">
      <LandingNavbar />
      <Head>
        <title>Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <View className="p-landing__banner">
        <View className="p-landing__banner__image-container">
          <Image
            className="p-landing__banner__image"
            src={IMAGES[fadeImage.urlKey]}
            alt="Unset"
            width={1400}
            height={1000}
          />
        </View>
        <View className="p-landing__banner__content">
          <View className="p-landing__banner__content__window">
            <Text size={64} className="fw-bold">
              {fadeImage.caption}
            </Text>
            <Text size={24}>{fadeImage.description}</Text>
            <Button
              variant="secondary-outline"
              onClick={handleBannerClick}
              label={isAuthenticated ? 'SHOPPING NOW' : 'LOG IN'}
            />
          </View>
        </View>
        {/* <Fade
          arrows={false}
          pauseOnHover={true}
          ref={bannerRef as Ref<SlideshowRef>}
          duration={5000}
          transitionDuration={400}
          onChange={handleChangeSlide}
        >
          {fadeImages.map((fadeImage, index) => (
            <View className="each-fade" key={index}>
              <View className="image-container">
                <Image
                  className="p-landing__banner__image"
                  src={IMAGES[fadeImage.urlKey]}
                  alt="Unset"
                  width={1400}
                  height={800}
                />
              </View>
              <View className="p-landing__banner__content">
                <View className="p-landing__banner__content__window">
                  <Text size={48} className="fw-bold">
                    {fadeImage.caption}
                  </Text>
                  <Text size={18}>{fadeImage.description}</Text>
                  <Button
                    variant="secondary-outline"
                    onClick={handleBannerClick}
                    label={isAuthenticated ? 'SHOPPING NOW' : 'LOG IN'}
                  />
                </View>
              </View>
            </View>
          ))}
        </Fade> */}
        {/* <View className="p-landing__banner__indicator" isRow>
          {fadeImages.map((_, index) => (
            <View
              className={cn('p-landing__banner__indicator__item', {
                'is-active': index === currentSlide,
              })}
              key={`landing__indicator__${index}`}
              onClick={handleGoSlide(index)}
            />
          ))}
        </View> */}
      </View>
      <View className="p-landing__product-banner py-64" align="center">
        <Text size={64} className="fw-bold">
          Lorem Ipsum
        </Text>
        <Text size={24}>
          Vestibulum semper tortor suscipit velit molestie, in convallis justo porta.
        </Text>
        <ProductBanner />
      </View>
      <View className="secondary-container pb-64 ">
        <Grid.Wrap>
          <Grid.Item variant="is-one-quarter">
            <View className="p-landing__selling">
              <Text size={64} className="p-landing__store__title fw-bold">
                Best
                <br />
                Selling
              </Text>
            </View>
          </Grid.Item>
          {bestSelling.map((item, idx) => {
            return (
              <Grid.Item variant="is-one-quarter" key={`best-selling-${idx}`}>
                <BestSellingProduct product={item} idx={idx} />
              </Grid.Item>
            );
          })}
        </Grid.Wrap>
      </View>
      <Footer />
    </View>
  );
};

type Props = ReturnType<typeof mapStateToProps> & ReturnType<typeof mapDispatchToProps>;
const mapStateToProps = (state: IRootState) => ({
  isAuthenticated: state.auth.isAuthenticated,
});

const mapDispatchToProps = (_dispatch: (_arg0: { payload: any; type: string }) => any) => ({});

export default connect(mapStateToProps, mapDispatchToProps)(Home);
